apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  labels:
    app: pihole
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 127.0.0.1
          - 1.1.1.1
      containers:
      - name: pihole
        image: pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: TZ
          value: "Europe/Belgrade"
        - name: FTLCONF_webserver_api_password
          valueFrom:
            secretKeyRef:
              name: pihole
              key: WEBPASSWORD
        - name: ServerIP
          value: 192.168.1.160
        ports:
        - containerPort: 80
          name: pihole-http
          protocol: TCP
        - containerPort: 53
          name: dns
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 443
          name: pihole-ssl
          protocol: TCP
        - containerPort: 67
          name: client-udp
          protocol: UDP
        volumeMounts:
        - name: pihole-local-etc-volume
          mountPath: "/etc/pihole"
        - name: pihole-local-dnsmasq-volume
          mountPath: "/etc/dnsmasq.d"
        securityContext:
          capabilities:        
            add:
              - NET_ADMIN
      restartPolicy: Always
      volumes:
      - name: pihole-local-etc-volume
        persistentVolumeClaim:
          claimName: etc
      - name: pihole-local-dnsmasq-volume
        persistentVolumeClaim:
          claimName: dnsmasq
